<?xml version="1.0"?>
<launch>
  <arg name="load_cloud" default="false"/>
  <arg name="fake_execution" default="true"/>
  <arg name="plot_traj" default="false"/>
  <!-- plot_traj should never be true if fake_execution is true -->
  <arg name="desired_object" default="bottle"/>

  <!-- Load ROS parameters -->
  <rosparam command="load" file="$(find jaco_grasp_ros)/config/constraints.yaml"/>
  <param name="/move_group/ompl/maximum_waypoint_distance" value="0.05" />
  <param name="/desired_object" value="$(arg desired_object)" />

  <!-- Run MTC demo -->
  <include file="$(find moveit_task_constructor_demo)/launch/demo.launch">
    <arg name="load_cloud" value="$(arg load_cloud)"/>
    <arg name="fake_execution" value="$(arg fake_execution)"/>
  </include>

  <!-- pcl_ros pcd to pointcloud -->
  <!-- published to /cloud_pcd topic -->
  <node name="pcd_to_pcl" pkg="pcl_ros" type="pcd_to_pointcloud" output="screen">
      <!-- <param name="file_name" value="$(find moveit_task_constructor_gpd)/data/pointclouds/cylinder.pcd" /> -->
      <param name="file_name" value="$(find jaco_grasp_ros)/pcd/cylinder/cylinder_noisy_0p02.pcd"/>
      <!-- <param name="file_name" value="$(find jaco_grasp_ros)/pcd/test_meshlab/test_meshlab.pcd"/> -->
      <!-- <param name="file_name" value="$(find jaco_grasp_ros)/pcd/test_meshlab/test_meshlab2.pcd"/> -->
      <!-- <param name="file_name" value="$(find jaco_grasp_ros)/pcd/test_meshlab/test_meshlab_dense_1.pcd"/> -->
      <param name="interval" value="1"/>
      <param name="frame_id" value="camera_link"/>
  </node>

  <!-- Run GPD demo -->
  <!-- load_cloud = false means feeding pcl data from topic rather than pcd file -->
  <include file="$(find moveit_task_constructor_gpd)/launch/gpd_demo.launch">
    <arg name="load_cloud" value="$(arg load_cloud)"/>
  </include>

  <!-- Broadcast static tf for robot base to camera -->
  <!-- cylinder.pcd (all versions) -->
  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="tf_root_intm" args="0 0 0 1.571 0 1.571 root intm" unless="$(arg load_cloud)"/>
  <node pkg="tf2_ros" type="static_transform_publisher" name="tf_intm_camera" args="0 0 0 3.1415 0 0 intm camera_link" unless="$(arg load_cloud)"/> -->

  <!-- testing for fixing transform for cylinder.pcd -->
  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="tf_root_intm" args="0 0 0 0 0 1.571 world intm" unless="$(arg load_cloud)"/>
  <node pkg="tf2_ros" type="static_transform_publisher" name="tf_intm_camera" args="0 0 0 0 0 -1.571 intm camera_link" unless="$(arg load_cloud)"/> -->

  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="tf_world_camera" args="0 0 0 -1.5707 0 0 world camera_link" unless="$(arg load_cloud)"/> -->


  <!-- If plot_traj, run trajectory plotting node -->
  <!-- <node pkg="jaco_grasp_ros" type="traj_plot.py" name="traj_plot" if="$(arg plot_traj)"/> -->

  <!-- transform for realsense -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="tf_world_root" args="0 0 0 -1.5707 0 0 world root" />
  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="tf_world_camera" args="0 0 0.1 0 0 0 world camera_link" unless="$(arg load_cloud)"/> -->
  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="tf_root_camera" args="0 0 0.1 0 0 0 root camera_link" unless="$(arg load_cloud)"/> -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="tf_world_camera" args="0 -0.17 0.08 -1.5707 0 0 world camera_link" unless="$(arg load_cloud)"/>
  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="tf_world_camera" args="0 0 0.1 -1.5707 0 0 world camera_link" unless="$(arg load_cloud)"/> -->

  <!-- Realsense -->
  <include file="$(find realsense2_camera)/launch/rs_camera.launch" unless="$(arg load_cloud)">
    <arg name="filters" value="pointcloud"/>
    <arg name="align_depth" value="true"/>
    <arg name="enable_infra1" value="false"/>
    <arg name="enable_infra2" value="false"/>
    <arg name="color_width" value="540"/>
    <arg name="color_height" value="960"/>
    <arg name="color_fps" value="30"/>
    <arg name="depth_width" value="540"/>
    <arg name="depth_height" value="960"/>
    <arg name="depth_fps" value="30"/>
  </include>

  <!-- Object detection node -->
  <node pkg="jaco_grasp_ros" type="object_detection.py" name="object_detection" unless="$(arg load_cloud)"/>

</launch>
