<?xml version="1.0"?>
<launch>
  <arg name="load_cloud" default="true"/>
  <arg name="fake_execution" default="true"/>

  <!-- Run MTC demo -->
  <include file="$(find moveit_task_constructor_demo)/launch/demo.launch">
    <arg name="load_cloud" value="$(arg load_cloud)"/>
    <arg name="fake_execution" value="$(arg fake_execution)"/>
  </include>

  <!-- Broadcast static tf for robot base to camera -->
  <!-- broadcast static tf for cylinder -->
  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="tf_world_camera" args="0 -0.2 0.2 1.571 0 1.571 world camera_link" unless="$(arg load_cloud)"/> -->

  <!-- pcl_ros pcd to pointcloud -->
  <!-- published to /cloud_pcd topic -->
  <!-- *** frame_id here is wrong - not sure what the right one is for the provided cylinder.pcd pcl data -->
  <node name="pcd_to_pcl" pkg="pcl_ros" type="pcd_to_pointcloud" output="screen">
      <param name="file_name" value="$(find moveit_task_constructor_gpd)/data/pointclouds/cylinder.pcd" />
      <!-- <param name="file_name" value="$(find jaco_grasp_ros)/pcd/cylinder/cylinder_noisy_0p02.pcd"/> -->
      <!-- <param name="file_name" value="$(find jaco_grasp_ros)/pcd/test_meshlab/test_meshlab.pcd"/> -->
      <!-- <param name="file_name" value="$(find jaco_grasp_ros)/pcd/test_meshlab/test_meshlab2.pcd"/> -->
      <!-- <param name="file_name" value="$(find jaco_grasp_ros)/pcd/test_meshlab/test_meshlab_dense_1.pcd"/> -->
      <param name="interval" value="1"/>
      <param name="frame_id" value="camera_link"/>
  </node>

  <!-- Run GPD demo -->
  <!-- load_cloud = false means feeding pcl data from topic rather than pcd file -->
  <include file="$(find moveit_task_constructor_gpd)/launch/gpd_demo.launch">
    <arg name="load_cloud" value="$(arg load_cloud)"/>
  </include>

  <!-- point_cloud_topic - point cloud topic to subscribe to
    cloud_dir - directory to save point clouds to
    remove_table - whether or not to segement table points
    cartesian_limits - whether or not to remove points outside limits
    xyz_lower_limits - lower (x,y,z) limits on points
    xyz_upper_limits - upper (x,y,z) limits on points -->

  <!-- <node pkg="$(find moveit_task_constructor_gpd)" type="point_cloud_server" name="point_cloud_server">
    <param name="point_cloud_topic" value="/camera/depth/color/points"/>
    <param name="cloud_dir" value="/home/avaz/jaco_grasp_ws/src/pcl_saves"/>
    <param name="remove_table" value="false"/>
    <param name="cartesian_limits" value="false"/>
    <arg name="xyz_lower_limits" value=""/>
    <arg name="xyz_upper_limits" value=""/>
  </node> -->

  <!-- Broadcast static tf for robot base to camera -->

  <!-- transform for artificial meshlab pcd -->
  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="tf_world_camera" args="0.2 -0.5 0.14 0 0 0 world camera_link" unless="$(arg load_cloud)"/> -->
  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="tf_world_camera" args="0 0 0.2 -1.5707 0 -1.5707 world camera_link" unless="$(arg load_cloud)"/> -->

  <!-- test_meshlab.pcd -->
  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="tf_world_camera" args="0 0 0.2 -1.5707 0 1.5707 world camera_link" unless="$(arg load_cloud)"/> -->
  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="tf_world_camera" args="0 0 0.2 -1.5707 0 -1.5707 world camera_link" unless="$(arg load_cloud)"/> -->

  <!-- cylinder.pcd (all versions) -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="tf_root_intm" args="0 0 0 1.571 0 1.571 root intm" unless="$(arg load_cloud)"/>
  <node pkg="tf2_ros" type="static_transform_publisher" name="tf_intm_camera" args="0 0 0 3.1415 0 0 intm camera_link" unless="$(arg load_cloud)"/>

  <!-- transform for realsense -->
  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="tf_world_camera" args="0 0 0 0 0 0 world camera_link" unless="$(arg load_cloud)"/> -->

  <!-- Realsense -->
  <!-- <include file="$(find realsense2_camera)/launch/rs_camera.launch" unless="$(arg load_cloud)">
    <arg name="filters" value="pointcloud"/>
  </include> -->

</launch>
